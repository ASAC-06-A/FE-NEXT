name: Deploy to Docker Hub and EC2

on:
  push:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - uses: actions/checkout@v3

      # 2. Log in to Docker Hub
      - name: Login Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      # 3. Build the Docker image
      - name: Build the Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/studyhub-next-nginx:latest .

      # 4. Tag the Docker image
      - name: Tagging
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/studyhub-next-nginx:latest ${{ secrets.DOCKERHUB_USERNAME }}/studyhub-next-nginx:latest

      # 5. Push to Docker Hub
      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/studyhub-next-nginx:latest

      # 6. Connect to EC2 and deploy with Docker Compose
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ~/deploy
            cat > ~/deploy/docker-compose.yml << 'EOF'
            version: '3.8'

            services:
              app:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/studyhub-next-nginx:latest
                ports:
                  - "3000:3000"
                environment:
                  NODE_ENV: production

              nginx:
                image: nginx:alpine
                ports:
                  - "80:80"
                volumes:
                  - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
                depends_on:
                  - app
            EOF
            cd ~/deploy
            docker-compose down
            docker-compose up -d
